{"version":3,"sources":["App.js","index.js"],"names":["RangeSlider","memo","classes","label","onChange","value","sliderProps","useState","sliderVal","setSliderVal","mouseState","setMouseState","useEffect","className","type","id","e","target","onMouseDown","onMouseUp","width","cellPadding","App","parentVal","setParentVal","sliderValueChanged","useCallback","val","useMemo","min","max","step","ReactDOM","render","document","getElementById"],"mappings":"sPASMA,EAAcC,gBAClB,YAA0D,IAAvDC,EAAsD,EAAtDA,QAASC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,MAAUC,EAAkB,iBACvD,EAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,mBAAS,MAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACRH,EAAaJ,KACZ,CAACA,IAYJ,OANAO,qBAAU,WACW,OAAfF,GACFN,EAASI,KAEV,CAACE,IAGF,yBAAKG,UAAU,gBACb,wBAAIA,UAAU,kBAAkBV,GAChC,uBAAGU,UAAU,gBAAb,mBACA,wBAAIA,UAAU,gBAAd,IAEGL,GAEH,yCACEM,KAAK,QACLT,MAAOG,GACHF,EAHN,CAIEO,UAAS,iBAAYX,GACrBa,GAAG,UACHX,SAxBiB,SAACY,GACtBP,EAAaO,EAAEC,OAAOZ,QAwBlBa,YAAa,kBAAMP,EAAc,SACjCQ,UAAW,kBAAMR,EAAc,UAEjC,2BAAOS,MAAM,OAAOP,UAAU,gBAC5B,4BACE,wBAAIA,UAAU,sBACd,wBAAIA,UAAU,sBACd,wBAAIA,UAAU,sBACd,+BAGJ,2BAAOO,MAAM,OAAOC,YAAY,KAC9B,4BACE,wBAAIR,UAAU,uBACd,6BACA,wBAAIA,UAAU,uBACd,6BACA,wBAAIA,UAAU,uBACd,6BACA,wBAAIA,UAAU,uBACd,+BAGJ,2BAAOO,MAAM,OAAOC,YAAY,KAC9B,4BACE,wBAAIR,UAAU,qBAAd,gBACA,wBAAIA,UAAU,qBAAd,sBACA,wBAAIA,UAAU,qBAAd,wBACA,wBAAIA,UAAU,qBAAd,wBAkCGS,EA1BH,WACV,MAAkCf,mBAAS,KAA3C,mBAAOgB,EAAP,KAAkBC,EAAlB,KAEMC,EAAqBC,uBAAY,SAACC,GACtCH,EAAaG,MAGTrB,EAAcsB,mBAClB,iBAAO,CACLC,IAAK,EACLC,IAAK,IACLzB,MAAOkB,EACPQ,KAAM,IACN5B,MAAO,kCACPC,SAAU,SAAAY,GAAC,OAAIS,EAAmBT,OAEpC,CAACO,IAGH,OACE,yBAAKV,UAAU,mBACb,kBAACb,EAAgBM,KChGvB0B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.8c096266.chunk.js","sourcesContent":["import React, {\n  memo,\n  useCallback,\n  useState,\n  useEffect,\n  useMemo,\n} from 'react';\nimport './App.scss';\n\nconst RangeSlider = memo(\n  ({ classes, label, onChange, value, ...sliderProps }) => {\n    const [sliderVal, setSliderVal] = useState(0);\n    const [mouseState, setMouseState] = useState(null);\n\n    useEffect(() => {\n      setSliderVal(value);\n    }, [value]);\n\n    const changeCallback = (e) => {\n      setSliderVal(e.target.value);\n    };\n\n    useEffect(() => {\n      if (mouseState === 'up') {\n        onChange(sliderVal);\n      }\n    }, [mouseState]);\n\n    return (\n      <div className=\"range-slider\">\n        <h1 className=\"slider-heading\">{label}</h1>\n        <p className=\"slider-title\">(approximately)</p>\n        <h2 className=\"slider-value\">\n          $\n          {sliderVal}\n        </h2>\n        <input\n          type=\"range\"\n          value={sliderVal}\n          {...sliderProps}\n          className={`slider ${classes}`}\n          id=\"myRange\"\n          onChange={changeCallback}\n          onMouseDown={() => setMouseState('down')}\n          onMouseUp={() => setMouseState('up')}\n        />\n        <table width=\"100%\" className=\"first__table\">\n          <tr>\n            <th className=\"first__table-cell\" />\n            <th className=\"first__table-cell\" />\n            <th className=\"first__table-cell\" />\n            <th />\n          </tr>\n        </table>\n        <table width=\"100%\" cellPadding=\"5\">\n          <tr>\n            <td className=\"second__table-cell\" />\n            <td />\n            <td className=\"second__table-cell\" />\n            <td />\n            <td className=\"second__table-cell\" />\n            <td />\n            <td className=\"second__table-cell\" />\n            <td />\n          </tr>\n        </table>\n        <table width=\"100%\" cellPadding=\"5\">\n          <tr>\n            <th className=\"third__table-cell\">$0 - $30,000</th>\n            <th className=\"third__table-cell\">$30,000 - $200,000</th>\n            <th className=\"third__table-cell\">$200,000 - $1million</th>\n            <th className=\"third__table-cell\">$1million & up</th>\n          </tr>\n        </table>\n      </div>\n    );\n  },\n);\n\nconst App = () => {\n  const [parentVal, setParentVal] = useState(30000);\n\n  const sliderValueChanged = useCallback((val) => {\n    setParentVal(val);\n  });\n\n  const sliderProps = useMemo(\n    () => ({\n      min: 0,\n      max: 1000000,\n      value: parentVal,\n      step: 10000,\n      label: 'What your monthly online sales?',\n      onChange: e => sliderValueChanged(e),\n    }),\n    [parentVal],\n  );\n\n  return (\n    <div className=\"slider__wrapper\">\n      <RangeSlider {...sliderProps} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}